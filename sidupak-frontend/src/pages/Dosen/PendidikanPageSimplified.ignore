// src/pages/PendidikanPageSimplified.tsx
import React, { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import PendidikanTableWithFilters from '../../components/ui/PendidikanTableWithFilters';
import { useTableConfig } from '../../hooks/useTableConfig';
import pendidikanService from '../../services/pendidikan.service';

interface PendidikanItem {
  id: number;
  kategori: string;
  kegiatan: string;
  nilaiPak: number;
  lulusTahun: number;
  jenjang: string;
  dosenId: number;
  fileUrl?: string;
  file?: string;
  createdAt: string;
  updatedAt: string;
}

export default function PendidikanPageSimplified() {
  const { user } = useAuth();
  const [selectedTables, setSelectedTables] = useState<string[]>(['all-data']); // Default show all data
  
  // Gunakan custom hook untuk konfigurasi tabel
  const { tableConfigurations, buildCustomConfig } = useTableConfig({
    baseService: pendidikanService,
    userId: user.sub,
    userRole: user.role
  });

  // Handler functions
  const handleEdit = (row: PendidikanItem) => {
    console.log('Edit', row);
    // Implementasi edit logic
    alert(`Edit item: ${row.kegiatan}`);
  };

  const handleDelete = (id: number) => {
    console.log('Delete', id);
    // Implementasi delete logic dengan konfirmasi
    if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {
      // Call delete API
      console.log('Deleting item with id:', id);
    }
  };

  // Toggle table visibility
  const toggleTable = (tableId: string) => {
    setSelectedTables(prev => 
      prev.includes(tableId) 
        ? prev.filter(id => id !== tableId)
        : [...prev, tableId]
    );
  };

  // Select all tables
  const showAllTables = () => {
    setSelectedTables(tableConfigurations.map(config => config.id));
  };

  // Hide all tables
  const hideAllTables = () => {
    setSelectedTables([]);
  };

  // Show only specific category
  const showOnlyCategory = (category: 'formal' | 'diklat' | 'other') => {
    const categoryMap = {
      formal: ['pendidikan-formal'],
      diklat: ['diklat'],
    };
    setSelectedTables(categoryMap[category]);
  };

  return (
    <div className="p-6 space-y-6">
      {/* Page Header */}
      <div className="mb-8">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-4">
            <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center shadow-lg">
              <i className="fas fa-graduation-cap text-white text-2xl"></i>
            </div>
            <div>
              <h1 className="text-3xl font-bold text-gray-800">Data Pendidikan & Diklat</h1>
              <p className="text-gray-600 mt-1">
                Sistem pengelolaan data pendidikan yang fleksibel dan mudah digunakan
              </p>
            </div>
          </div>

          {/* Table Selector */}
          <div className="bg-white rounded-xl shadow-lg p-4">
            <h3 className="text-sm font-semibold text-gray-700 mb-3">Tampilkan Tabel</h3>
            <div className="flex flex-wrap gap-2 mb-3">
              <button
                onClick={showAllTables}
                className="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors"
              >
                Semua
              </button>
              <button
                onClick={hideAllTables}
                className="px-3 py-1 text-xs bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors"
              >
                Sembunyikan
              </button>
              <button
                onClick={() => showOnlyCategory('formal')}
                className="px-3 py-1 text-xs bg-green-100 text-green-700 rounded-full hover:bg-green-200 transition-colors"
              >
                Formal
              </button>
              <button
                onClick={() => showOnlyCategory('diklat')}
                className="px-3 py-1 text-xs bg-purple-100 text-purple-700 rounded-full hover:bg-purple-200 transition-colors"
              >
                Diklat
              </button>
              <button
                onClick={() => showOnlyCategory('other')}
                className="px-3 py-1 text-xs bg-orange-100 text-orange-700 rounded-full hover:bg-orange-200 transition-colors"
              >
                Lainnya
              </button>
            </div>
            <div className="text-xs text-gray-500">
              {selectedTables.length} dari {tableConfigurations.length} tabel ditampilkan
            </div>
          </div>
        </div>

        {/* Quick Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-blue-100 text-sm">Available Tables</p>
                <p className="text-2xl font-bold">{tableConfigurations.length}</p>
              </div>
              <i className="fas fa-table text-2xl text-blue-200"></i>
            </div>
          </div>
          <div className="bg-gradient-to-r from-green-500 to-green-600 rounded-xl p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-green-100 text-sm">Active Tables</p>
                <p className="text-2xl font-bold">{selectedTables.length}</p>
              </div>
              <i className="fas fa-eye text-2xl text-green-200"></i>
            </div>
          </div>
          <div className="bg-gradient-to-r from-purple-500 to-purple-600 rounded-xl p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-purple-100 text-sm">Categories</p>
                <p className="text-2xl font-bold">7</p>
              </div>
              <i className="fas fa-tags text-2xl text-purple-200"></i>
            </div>
          </div>
          <div className="bg-gradient-to-r from-orange-500 to-orange-600 rounded-xl p-4 text-white">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-orange-100 text-sm">Features</p>
                <p className="text-lg font-bold">Search • Filter • Sort</p>
              </div>
              <i className="fas fa-magic text-2xl text-orange-200"></i>
            </div>
          </div>
        </div>
      </div>

      {/* Tables */}
      <div className="space-y-8">
        {tableConfigurations
          .filter(config => selectedTables.includes(config.id))
          .map((config) => (
            <div key={config.id} className="relative">
              {/* Table Toggle Button */}
              <button
                onClick={() => toggleTable(config.id)}
                className="absolute top-4 right-4 z-10 w-8 h-8 bg-red-100 hover:bg-red-200 text-red-600 rounded-full flex items-center justify-center text-xs transition-colors"
                title="Sembunyikan tabel"
              >
                <i className="fas fa-times"></i>
              </button>
              
              <PendidikanTableWithFilters
                tableId={config.id}
                title={config.title}
                icon={config.icon}
                fetchData={config.fetchData}
                onEdit={handleEdit}
                onDelete={handleDelete}
                initialFilters={config.initialFilters}
              />
            </div>
          ))}
      </div>

      {/* No Tables Message */}
      {selectedTables.length === 0 && (
        <div className="text-center py-16">
          <div className="w-32 h-32 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
            <i className="fas fa-table text-gray-400 text-4xl"></i>
          </div>
          <h3 className="text-xl font-semibold text-gray-800 mb-2">Tidak ada tabel yang ditampilkan</h3>
          <p className="text-gray-600 mb-4">Pilih tabel yang ingin Anda lihat dari menu di atas</p>
          <button
            onClick={showAllTables}
            className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            <i className="fas fa-table mr-2"></i>
            Tampilkan Semua Tabel
          </button>
        </div>
      )}

      {/* Usage Guide */}
      <div className="mt-12 bg-gradient-to-r from-gray-50 to-blue-50 rounded-xl p-6 border border-blue-100">
        <div className="flex items-start space-x-4">
          <div className="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center flex-shrink-0">
            <i className="fas fa-lightbulb text-blue-600 text-xl"></i>
          </div>
          <div>
            <h3 className="text-lg font-semibold text-gray-800 mb-2">
              Tips Penggunaan
            </h3>
            <div className="text-sm text-gray-600 space-y-2">
              <p>• Gunakan toggle di kanan atas untuk menampilkan/menyembunyikan tabel tertentu</p>
              <p>• Setiap tabel memiliki fitur pencarian, filter, dan pagination yang independent</p>
              <p>• Gunakan tombol kategori untuk menampilkan grup tabel tertentu dengan cepat</p>
              <p>• Data dikelompokkan berdasarkan jenis kegiatan untuk memudahkan pengelolaan</p>
            </div>
          </div>
        </div>
      </div>

      {/* Add New Data Button */}
      <div className="fixed bottom-8 right-8">
        <button className="w-14 h-14 bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center">
          <i className="fas fa-plus text-xl"></i>
        </button>
      </div>
    </div>
  );
}